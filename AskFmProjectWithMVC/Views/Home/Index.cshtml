@model UserWithFollowingAnswerViewModel

@{
    ViewData["Title"] = "Home Page";
}

@if (Model.FollowingAns.Count == 0)
{
    <h3 class="text-center">There is No Answer To Show</h3>
}


@foreach (var item in Model.FollowingAns)
{

    <div class="card">

        <p class="question">@item.question.question_text <a asp-action="profile" asp-controller="user" asp-route-id="@item.question.user_who_ask_id"><small class="asker">@item.question.user_who_ask?.username</small></a></p>
        <div>
            <img src="/Images/@item.question.user_who_answer.image" class="images imageAnswer">
            <footer class="timestamp">
                <span class="user_answer">@item.question.user_who_answer.username</span><br />
                <cite class="source" title="Source Title">@item.question.post_date</cite>
                <hr>
            </footer>
        </div>

        <p class="answer">@item.answer_text</p>
        <button  class="love-button">

            @if ((bool)ViewData[item.id.ToString()])
            {
                
                <i id="fillLove_@item.id" onclick="addLike(@item.id, 'r')" class="fas fa-heart"></i>
                <i onclick="addLike(@item.id, 'a')" id="emptyLove_@item.id" class="disapear far fa-heart"></i>

            }
            else {
                <i id = "fillLove_@item.id" onclick = "addLike(@item.id, 'r')" class="disapear fas fa-heart"></i>
                <i onclick="addLike(@item.id, 'a')" id="emptyLove_@item.id" class="far fa-heart"></i>
            }

            <small onclick="showLikes(@item.id)" class="numberOfLikes numberOfLikes_@item.id">@item.likeCount</small>
        </button>
    </div>

}

@section scripts {
    <script>



        function addLike(id, flag) {
            var counter = document.getElementsByClassName("numberOfLikes_" + id)[0];
            let count = Number(counter.innerHTML);
            if (flag == 'a') {
                fetch("/like/addLike?answerId=" + id).then(res => {
                    count++;
                    counter.innerHTML = count.toString();
                }).catch();
            } else if(flag == 'r') {
                fetch("/like/removeLike?answerId=" + id).then(res => {
                    count--;
                    counter.innerHTML = count.toString();
                }).catch();
            }
            counter.innerHTML = count.toString();
            var likeBtn = document.getElementById("fillLove_" + id);
            var emptyBtn = document.getElementById("emptyLove_" + id);
            likeBtn.classList.toggle("disapear");
            emptyBtn.classList.toggle("disapear");
        }


        const modalContainer = document.querySelector('.modal-container');
        const closeModal = document.querySelector('.close');
        closeModal.addEventListener('click', closeModel);
        function closeModel() {
            modalContainer.classList.remove('fade-in');
            modalContainer.style.display = 'none';
        }
        function edite_answer(id, answer_text) {
            

        }
        
        
        function showLikes(id) {
            fetch("/like/usersWhoLike?answer_id=" + id).then(res => {
                return res.json()

            }).then(s => {
                modalContainer.classList.add('fade-in');
                modalContainer.style.display = 'block';
                let div = document.getElementById("users");
                div.innerHTML = "";
                s.map((item, index) => {
                    var child = document.createElement("p");
                    child.setAttribute("class", "userWhoLove")
                    child.innerHTML = item;
                    div.appendChild(child);
                })
            })
            .catch();
        }

    </script>
}

@section styles {
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
    
}

<div class="modal-container">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>People Loved Answer</h2>
        <div id="users"></div>
    </div>
</div>